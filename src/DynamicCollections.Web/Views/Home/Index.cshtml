@model DgonDotNet.Blog.Samples.DynamicCollections.Models.DisplayViewModel

@{
	ViewBag.Title = "Displaying";
}

<h1>Displaying</h1>

<table class="table table-bordered table-striped table-hover table-responsive">
	<caption>Displayable things in a loop (naughty, naughty)</caption>
	<thead>
		<tr>
			<th>@Html.DisplayNameFor(model => model.Things.First().Number)</th>
			<th>@Html.DisplayNameFor(model => model.Things.First().Text)</th>
			<th>@Html.DisplayNameFor(model => model.Things.First().IsEven)</th>
		</tr>
	</thead>
	<tbody>
		@for (int i = 0; i < Model.Things.Length; i++)
		{
			<tr>
				<td>
					@Html.DisplayFor(m => Model.Things[i].Number)
				</td>
				<td>
					@Html.DisplayFor(m => Model.Things[i].Text)
				</td>
				<td>
					@Html.DisplayFor(m => Model.Things[i].IsEven)
				</td>
			</tr>
		}
	</tbody>
</table>

<table class="table table-bordered table-striped table-hover table-responsive">
	<caption>Displayable things using templates (good boy)</caption>
	<thead>
		<tr>
			<th>@Html.DisplayNameFor(model => model.Things.First().Number)</th>
			<th>@Html.DisplayNameFor(model => model.Things.First().Text)</th>
			<th>@Html.DisplayNameFor(model => model.Things.First().IsEven)</th>
		</tr>
	</thead>
	<tbody>
		@Html.DisplayFor(m => m.Things)
	</tbody>
</table>

@section scripts
{
	<script type="text/javascript">
		$(function () {
			
		});
	</script>
}
